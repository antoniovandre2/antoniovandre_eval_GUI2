                                        
      .':clllc;'.   ..;clll:,.          
    .col;'..,cxxl,,ldo:'.,lxxl.         
  .:dc.      .lkkxxl:.  .cdxkx:         
 .cd:.       .lkkko.    ;xkkkd'         
 ,o:.        ,dkkx:     .;cc;.   .......
  .         .ckkko.         ....''''''''
            ,dkkx;       ...''''''''''''
           .ckkko.    ..''''''''''''''''
           'dkkx:. ..'''''',;,''''''''''
 .:cc;.   .ckkkd,.'''''''';odc''''''''''
;dkkkx,   ;xkkkl,'''''''';oxl,''''''''''
ckkxd:.  ,dxxkxo,'''''',cddc,'''''''''''
'okdc'.,coc':dxxo::::clddl;'''''''''''''
 .,:clcc;.  .;clooooool:;'''''''''''''''
           .''''',,,''''''''''''''''''''
          .'''''''''''''''''''''''''''''
          .'''''''''''''''''''''''''''''
         .''''''''''''''''''''''''''''''
         .''''''''''''''''''''''''''''''

Mathematical Ramblings Project (mathematicalramblings.blogspot.com).
____________________

Operators available for "antoniovandre_eval":

"+": sum.

"-": subtraction.

"*": multiplication.

"/": division.

"^": exponentiation.

"%": rest of division

"@": arrangements (Combinatory Analysis).

"#": combinations (Combinatory Analysis).

"$": rounding to the order of magnitude.

">": maximum.

"<": minimum.

":": base logarithm.

"~": returns "1" if it is an approximate value, and "0" if not.
_____

Parentheses can be used in "antoniovandre_eval".
_____

Constants available for "antoniovandre_eval":

"PI": ratio between the length and diameter of a circumference.

"T": double pi.

"E": base of natural logarithms.

"C": speed of light in vacuum, in IS.

"G": constant of Universal Gravitation, in IS.

"QE": elementary charge, in IS.

"H": Planck's constant, on SI.

"HH": Planck's reduced constant, in IS.

"K": Boltzmann's constant, in IS.

"ME": electron mass, in IS.

"MP": proton mass, in IS.

"MN": neutron mass, in SI.

"AM": Avogadro's constant, times 10^(-23), in mol^(-1).

"KE": Coulomb's constant, electrostatic constant, in IS.

"R": universal constant of perfect gases, in IS.

"SB": Stefan-Boltzmann's constant, in IS.

"PM": magnetic permeability constant in vacuum, in IS.

"PE": electric permeability constant in vacuum, in SI.

"P": golden ratio.

"CC": Catalan's constant.

"EM": Euler-Mascheroni's constant.

"FA": Feigenbaum's alpha constant.

"FS": Feigenbaum's sigma constant.

"AP": ApÃ©ry's constant.

"CO": Conway's constant.

"KH": Khinchin's constant.

"GK": Glaisher-Kinkelin's constant.
_____

Functions available for "antoniovandre_eval":

"sen": sin function.

"cos": cosine function.

"tg": tangent function.

"cotg": cotangent function.

"sec": secant function.

"cossec": cossecant function.

"arcsen": arc sine function.

"arccos": arc cosine function.

"arctg": arc tangent function.

"arccotg": arc cotangent function.

"arcsec": arc secant function.

"arccossec": arc cossecant function.

"cord": chord function.

"arccord": arc chord function.

"ln": natural logarithm function.

"logdez": base 10 logarithm function.

"logdois": base 2 logarithm function.

"senh": hyperbolic sine function.

"cosh": hyperbolic cosine function.

"tgh": hyperbolic tangent function.

"cotgh": hyperbolic cotangent function.

"sech": hyperbolic secant function.

"cossech": hyperbolic cossecant function.

"arcsenh": hyperbolic arc sine function.

"arccosh": hyperbolic arc cosine function.

"arctgh": hyperbolic arc tangent function.

"arccotgh": hyperbolic arc cotangent function.

"arcsech": hyperbolic arc secant function.

"arccossech": hyperbolic arc cossecant function.

"fatorial": factorial function.

"modulo": module function.

"piso": floor function;

"teto": ceiling function;

"radparagrau": function to convert radians to degrees.

"radparagrado": function to convert radians to grads.

"graupararad": function to convert degrees to radians.

"grauparagrado": function to convert degrees to grads.

"gradopararad": function to convert grads to radians.

"gradoparagrau": function to convert grads to degrees.

"kelvinparacelsius": function to convert temperature in Kelvin to Celsius.

"kelvinparafahrenheit": function to convert temperature in Kelvin to Fahrenheit.

"celsiusparakelvin": function to convert temperature in Celsius to Kelvin.

"celsiusparafahrenheit": function to convert temperature in Celsius to Fahrenheit.

"fahrenheitparakelvin": function to convert temperature in Fahrenheit to Kelvin.

"fahrenheitparacelsius": function to convert temperature in Fahrenheit to Celsius.

"seigual": equal conditional function; requires four arguments separated by "|", if the first is equal to the second, it returns the third, otherwise the fourth.

"sediferente": not equal conditional function; requires four arguments separated by "|", if the first is different from the second, it returns the third, otherwise the fourth.

"semaiorouigual": greater than or equal conditional function; requires four arguments separated by "|", if the first is greater than or equal to the second, it returns the third, otherwise the fourth.

"semenorouigual": equal conditional function; requires four arguments separated by "|", if the first is less than or equal to the second, it returns the third, otherwise the fourth.

"semaior": greater than conditional function; requires four arguments separated by "|", if the first is greater than the second, it returns the third, otherwise the fourth.

"semenor": less than conditional function; requires four arguments separated by "|", if the first is less than the second, it returns the third, otherwise the fourth.

"pitagoras": pythagoras function, returns the hypotenuse given the legs; requires two arguments separated by "|", the legs.

"diagonalparalelepipedo": returns the diagonal of a parallelepiped; requires three arguments separated by "|", the edges.

"pat": returns the n-th term of an AP; requires three arguments separated by "|", the first term, the ratio, and the position "n".

"par": returns the ratio of an AP; requires three arguments separated by "|", the first term, the last term, and the number of terms.

"pas": returns the sum of the terms of an AP; requires three arguments separated by "|", the first term, the last term, and the number of terms.

"pasr": returns the sum of the terms of an AP; requires three arguments separated by "|", the first term, the ratio, and the number of terms.

"pgt": returns the n-th term of a GP; requires three arguments separated by "|", the first term, the ratio, and the position "n".

"pgr": returns the ratio of a GP; requires three arguments separated by "|", the first term, the last term, and the number of terms.

"pgs": returns the sum of the terms of a GP; requires three arguments separated by "|", the first term, the last term, and the number of terms.

"pgsr": returns the sum of the terms of a GP; requires three arguments separated by "|", the first term, the ratio, and the number of terms.

"mmc": returns the mmc of the arguments, positive integer arguments separated by "|".

"mdc": returns the gcd of the arguments, positive integer arguments separated by "|".

"mediaaritmetica": returns the arithmetic mean of the arguments, arguments separated by "|".

"mediaaritmeticaponderada": returns the weighted arithmetic mean of the arguments, arguments in pairs, first the weights, second the values, separated by "|".

"mediageometrica": returns the geometric mean of the arguments, arguments separated by "|".

"mediaharmonica": returns the arithmetic mean of the arguments, arguments separated by "|".

"sum": returns the sum; arguments separated by "|", first the function in the standard variable, second the first index, and third the second index.

"prod": returns the product; arguments separated by "|", first the function in the standard variable, second the first index, and third the second index.

"composicao": returns the numerical value of the composite function passed as an argument; arguments separated by "|", first the function in the default variable, second the period, and third the number of compositions.

"base": returns the number corresponding to the string passed as the first argument, the string must be between "[" and "]" for its processing to be ignored; the corresponding base is the second argument; arguments separated by "|".

"max": returns the maximum value among the arguments passed; arguments separated by "|".

"min": returns the minimum value among the arguments passed; arguments separated by "|".

"mediana": returns the statistical median of the arguments passed; arguments separated by "|".

"variancia": returns the statistical variance of the arguments passed; arguments separated by "|".

"desviopadrao": returns the standard deviation of the arguments passed; arguments separated by "|".

"tamanhostring": returns the length of the string passed as an argument; it must be between the characters "[" and "]" for its processing to be ignored.

"numeroocorrenciasstring": returns the number of occurrences of a substring in a string passed as arguments; first: the main string; second: the substring; must be between the characters "[" and "]" so that their processing is ignored.

"der": derivative at a point. Requires 4 arguments separated by "|": the function in the standard variable, the point, the order of the derivative, and the natural number precision.

"int": definite integral. Requires 4 arguments separated by "|": the function in the standard variable, the lower limit, the upper limit, and the natural number precision.

"raizes": returns the roots of the function passed as a parameter; requires 5 arguments: the function in the default variable, the lower search point, the upper search point, the root to be found, starting with "0" for the first root found, "1" if a second root is found, "2" if a third root is found, etc., or "-1" to return the number of roots found, and as the last argument the positive integer resolution of the search.
_____

Calculation example in "antoniovandre_eval":

Input: "(2 + ln (5 - 2 ^ (8 - 6))) * 3";

Output: "6". 
____________________

Suggestions or reporting errors: "a.vandre.g@gmail.com".
____________________
